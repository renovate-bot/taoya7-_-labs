import{R as e,B as n,M as s,a as i,G as o,E as t,b as r,S as a,c as d,C as h,P as c,W as m,d as l,A as u,e as p,O as v,o as f,f as w,g as S}from"./vendor.30f96221.js";const C={c:!0,s:.01,noise:{n:.44,nSpd:.095,nSin:1,nCos:1},presets:{a:function(){C.noise.n=.35,C.noise.nSpd=.005,C.noise.nSin=3.5,C.noise.nCos=.1},b:function(){C.noise.n=.35,C.noise.nSpd=.001,C.noise.nSin=.1,C.noise.nCos=.1},c:function(){C.noise.n=.4,C.noise.nSpd=.1,C.noise.nSin=4.2,C.noise.nCos=4},d:function(){C.noise.nSpd=.09*Math.random(),C.noise.nSin=5*Math.random()/4,C.noise.nCos=5*Math.random()/4}}};class g{constructor(){console.clear(),console.log("Three Version: ",e),this.init(),this.shaderSpeed=0,this.then=0,this.initController(),this.gui(),this.addGeometry(),this.effect(),this.renderNoise()}addGeometry(){const e=new n(10,10,10,10,10,10),o=new s({wireframe:!0});this.box=new i(e,o),this.scene.add(this.box),this.render()}gui(){const e=new o;e.add(C,"c").listen().name("Composer");const n=e.addFolder("Controls"),s=e.addFolder("Presets");n.add(C.noise,"n",.01,.5).listen().name("Noise"),n.add(C.noise,"nSpd",0,.05).listen().name("Speed"),n.add(C.noise,"nSin",0,5).listen().name("NoiseSin"),n.add(C.noise,"nCos",0,5).listen().name("NoiseCos"),n.open(),s.add(C.presets,"a").name("Stop Motion"),s.add(C.presets,"b").name("Static"),s.add(C.presets,"c").name("Old TV"),s.add(C.presets,"d").name("Random")}effect(){const e={uniforms:{tDiffuse:{value:0},amount:{value:C.noise.sSpd},noise:{value:C.noise.n},noiseSin:{value:C.noise.nSin},noiseCos:{value:C.noise.nCos}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix  * vec4( position, 1.0 );\n}\n",fragmentShader:"\nuniform float amount;\nuniform float noise;\nuniform float noiseSin;\nuniform float noiseCos;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat random( vec2 p ) {\n  vec2 K1 = vec2(\n    abs(noiseSin *  23.14069263277926), \n    abs(noiseCos *  2.665144142690225)\n  );\n  return fract( sin( dot(p,K1) ) * 2222.6789 );\n}\nvoid main(){\n    vec4 color = texture2D( tDiffuse, vUv );\n    vec2 uvRandom = vUv;\n    uvRandom.y *= random( vec2( uvRandom.y , amount ));\n    color.rgb += random( uvRandom ) * pow( noise * 2.0, 5.0 );\n    gl_FragColor = vec4( color  );\n}\n"};this.composer=new t(this.renderer),this.renderPass=new r(this.scene,this.camera),this.composer.addPass(this.renderPass),this.customPass=new a(e),this.customPass.renderToScreen=!0,this.composer.addPass(this.customPass),this.composer.render(.1)}renderNoise(){this.box.rotation.y+=.01,this.shaderSpeed+=.001,this.customPass.uniforms.amount.value=C.noise.nSpd*this.shaderSpeed,this.customPass.uniforms.noise.value=C.noise.n,this.customPass.uniforms.noiseSin.value=C.noise.nSin,this.customPass.uniforms.noiseCos.value=C.noise.nCos,this.index=window.requestAnimationFrame(this.renderNoise.bind(this)),C.c?this.composer.render(.1):this.render()}windowResize(){this.width=window.innerWidth,this.height=window.innerHeight,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.render()}init(){const{innerWidth:e,innerHeight:n}=window;this.aspect=e/n,this.scene=new d,this.scene.background=new h(3355460),this.camera=new c(75,this.aspect,.1,1e3),this.camera.position.set(2,3,20),this.camera.lookAt(0,0,0),this.aspect=e/n,this.renderer=new m({antialias:!0,alpha:!0}),this.renderer.setSize(e,n),this.renderer.render(this.scene,this.camera),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=l,document.body.appendChild(this.renderer.domElement)}initAxesHelp(){this.axesHelper=new u(100),this.scene.add(this.axesHelper)}initGridHelp(){this.gridHelper=new p(20,20,5592422,2236979),this.scene.add(this.gridHelper)}initController(){const e=this;this.controller=new v(this.camera,this.renderer.domElement),this.controller.addEventListener("change",(function(){e.renderer.render(e.scene,e.camera)}))}render(){this.renderer.render(this.scene,this.camera)}}const P={mounted(){new g}};P.render=function(e,n,s,i,o,t){return f(),w("div")};S(P).mount("#app");
